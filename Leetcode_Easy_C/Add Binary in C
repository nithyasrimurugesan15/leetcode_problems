char* addBinary(char* a, char* b) {
     int lenA = strlen(a);
    int lenB = strlen(b);
    
    int maxLen = (lenA > lenB) ? lenA : lenB; 
    int carry = 0;
    
    // Allocate memory for the result (maxLen + 2 for possible carry)
    char* result = (char*)malloc((maxLen + 2) * sizeof(char)); 
    result[maxLen + 1] = '\0';  // Null-terminate the result string
    
    int i = lenA - 1, j = lenB - 1, k = maxLen;
    
   
    while (i >= 0 || j >= 0 || carry) {
        int sum = carry;
        
        if (i >= 0) sum += a[i--] - '0';
        
        if (j >= 0) sum += b[j--] - '0';
        
        carry = sum / 2;
        
        result[k--] = (sum % 2) + '0';
    }
    
    if (k == 0) {
        result[0] = result[1];
        return result + 1;
    }
    return result;
}
